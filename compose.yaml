version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: fakedb
      POSTGRES_USER: fakepostgres
      POSTGRES_PASSWORD: fakewestside
    ports:
      - '4231:5432'



#создаем 1 контейнер(БД)! а приложение будет реальным
#в порт маппинг пишем у хоста(1 значение) любой порт кроме 5432 т.к он занят нашим локальным БД!
#app.yml также не нужен потому что в компоузе мы укажем все настройки
# ports:'4231:5432' означает что spring будет работать с БД на порту 4231 локально!почему? потому что напрямую невозможно работать с контейнером а нужен маппинг(связующее звено)
#тоесть мы как бы открывает внешний порт(4231) !!!!а этот порт перенаправит нас на порт 5432 внутри контейнера!!



# проброс порта  что каждая квартира в доме - это отдельный контейнер Docker, а почтовый ящик - это порт,
#  через который можно общаться с контейнером это как механизм маршрутизации сетевого трафика
#контейнеры автономные! просто так к ним не достучаться и нужно сделать связь между внешним миром и контейнером
#spring-boot-docker-compose плюсы:
#можно самому не билдить и запускать компоус
#контейнер запускается с запуском приложения
